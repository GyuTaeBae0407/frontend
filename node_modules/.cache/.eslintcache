[{"C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\index.js":"1","C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\App.js":"2","C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\reportWebVitals.js":"3","C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\pages\\Home.js":"4","C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\pages\\ResetPassword.js":"5","C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\pages\\LoginScreen.js":"6","C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\pages\\ForgotPassword.js":"7","C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\pages\\RegisterScreen.js":"8","C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\googlesignin\\config.js":"9"},{"size":535,"mtime":1676506330000,"results":"10","hashOfConfig":"11"},{"size":826,"mtime":1676506330000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1676506330000,"results":"13","hashOfConfig":"11"},{"size":938,"mtime":1676506330000,"results":"14","hashOfConfig":"11"},{"size":2676,"mtime":1676511856958,"results":"15","hashOfConfig":"11"},{"size":4154,"mtime":1676510834903,"results":"16","hashOfConfig":"11"},{"size":2610,"mtime":1676507146848,"results":"17","hashOfConfig":"11"},{"size":2653,"mtime":1676507097811,"results":"18","hashOfConfig":"11"},{"size":520,"mtime":1676506330000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pvcex8",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\index.js",[],[],"C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\App.js",[],[],"C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\reportWebVitals.js",[],[],"C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\pages\\Home.js",["48"],[],"C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\pages\\ResetPassword.js",["49"],[],"C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\pages\\LoginScreen.js",["50","51","52"],[],"C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\pages\\ForgotPassword.js",["53","54","55","56"],[],"\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport ResetPassword from './ResetPassword';\n\nfunction ForgotPassword() {\n\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState('');\n\n  const [code, setCode] = useState(generateRandomNumber());\n  const [enteredCode, setEnteredCode] = useState('');\n\n  function generateRandomNumber() {\n    var minm = 100000;\n    var maxm = 999999;\n    return Math.floor(Math.random() * (maxm - minm + 1)) + minm;\n  } \n\n  const handleBack = () => {\n    navigate('/login');\n}\n\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/PWreset/${email}/${code}`);\n      alert('Code sent successfully');\n    } catch (error) {\n      alert('Error: An error occurred. Please try again later.');\n    }\n  };\n\n  const handleCheckCode = async () => {\n    try {\n      const { data } = await axios.get(`http://localhost:3000/PWreset/${code}`);\n      if (data.status == 404) {\n        alert('Invalid Code');\n      } else if (Number(enteredCode) === code) {\n        alert('Correct');\n        navigate('/reset-password', { state: { email: email }});\n      } else {\n        alert('Incorrect Code');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n\n      \n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n\n      <div>\n      <h2>Account Verification</h2>\n      <p>Please enter your email to receive a reset code:</p>\n      </div>\n      <div className='padding'>\n        <input \n          className='inputprompt'\n          type=\"email\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n          placeholder=\"Email address\"\n          autoComplete=\"email\"\n          required\n        />\n      </div>\n      <div className='padding'>\n        <button className='buttons' onClick={handleSubmit}>Send reset code</button>\n      </div>\n      <div>\n      <p>Enter the code to reset your password:</p>\n      </div>\n      <div className='padding'>\n        <input \n          className='inputprompt'\n          type=\"number\"\n          value={enteredCode}\n          onChange={(event) => setEnteredCode(event.target.value)}\n          placeholder=\"Reset Code\"\n          required\n        />\n      </div>\n      <div className='padding'>\n      <button className='buttons' onClick={handleCheckCode}>Check code</button>\n      </div>\n      <button className='buttons' onClick={handleBack}>Back</button>\n      \n    </div>\n    \n  );\n}\n\nexport default ForgotPassword;\n","C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\pages\\RegisterScreen.js",[],[],"C:\\Users\\19053\\projects\\ToggleFrontEnd-main\\src\\googlesignin\\config.js",["57"],[],{"ruleId":"58","severity":1,"message":"59","line":11,"column":9,"nodeType":"60","endLine":16,"endColumn":38},{"ruleId":"61","severity":1,"message":"62","line":25,"column":20,"nodeType":"63","messageId":"64","endLine":25,"endColumn":22},{"ruleId":"61","severity":1,"message":"65","line":22,"column":29,"nodeType":"63","messageId":"64","endLine":22,"endColumn":31},{"ruleId":"66","severity":1,"message":"67","line":36,"column":26,"nodeType":"68","messageId":"69","endLine":36,"endColumn":48,"fix":"70"},{"ruleId":"58","severity":1,"message":"59","line":121,"column":21,"nodeType":"60","endLine":121,"endColumn":81},{"ruleId":"71","severity":1,"message":"72","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":21},{"ruleId":"71","severity":1,"message":"75","line":13,"column":16,"nodeType":"73","messageId":"74","endLine":13,"endColumn":23},{"ruleId":"71","severity":1,"message":"76","line":28,"column":13,"nodeType":"73","messageId":"74","endLine":28,"endColumn":21},{"ruleId":"61","severity":1,"message":"65","line":38,"column":23,"nodeType":"63","messageId":"64","endLine":38,"endColumn":25},{"ruleId":"71","severity":1,"message":"77","line":2,"column":19,"nodeType":"73","messageId":"74","endLine":2,"endColumn":37},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"78","text":"79"},"no-unused-vars","'ResetPassword' is defined but never used.","Identifier","unusedVar","'setCode' is assigned a value but never used.","'response' is assigned a value but never used.","'GoogleAuthProvider' is defined but never used.",[1042,1042],"()"]